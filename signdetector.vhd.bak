LIBRARY ieee;
USE ieee.std_logic_1164.ALL;

ENTITY signdetector IS
    PORT (
        s : IN STD_LOGIC_VECTOR(4 DOWNTO 0);
        o : OUT STD_LOGIC_VECTOR(4 DOWNTO 0));
END signdetector;

ARCHITECTURE Structural OF signdetector IS
    SIGNAL complemented : IN STD_LOGIC_VECTOR(4 DOWNTO 0);
    SIGNAL plusone : STD_LOGIC_VECTOR(4 DOWNTO 0) := "00001";

BEGIN
    adder : ENTITY.work.fulladder(Structural)
        PORT MAP(
            x => NOT s,
            y => plusone,
            z => '0',
            s => complemented
        )
        -- Select the output
        IF s(4) = '1' THEN
            o <= complemented;
        ELSE
            o <= s;
        END IF;
END Structural;



-- entity signdetector is
-- generic (N ;: integer := 5);
-- port(x, y :in std_logic_vector(N-1 downto 0);
--         z : in std_logic;
--         s : out std_logic_vector(N-1 downto 0);
--         c : out std_logic);
-- end signdetector;

-- architecture Structural of signdetector is
--     component fivebitbinaryadder is
--         port(x, y :in std_logic_vector(N-1 downto 0);
--                 z : in std_logic;
--                 s : out std_logic_vector(N-1 downto 0);
--                 c : out std_logic);
--     end component;
--     signal s1 : std_logic_vector(N-1 downto 0);
--     signal c1 : std_logic;

-- begin
--     gen_detector for j in 0 to N-1 generate